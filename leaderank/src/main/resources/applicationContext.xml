<?xml version="1.0" encoding="UTF-8"?>
<beans  xmlns="http://www.springframework.org/schema/beans"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:p="http://www.springframework.org/schema/p"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:util="http://www.springframework.org/schema/util"
        xmlns:lang="http://www.springframework.org/schema/lang"
        xmlns:jee="http://www.springframework.org/schema/jee"
        xmlns:task="http://www.springframework.org/schema/task"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
       http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
       http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/task 
       http://www.springframework.org/schema/task/spring-task-3.0.xsd">
    <tx:annotation-driven transaction-manager="transactionManager" />
    <context:property-placeholder location="datasource.properties" order="0" ignore-unresolvable="true"/>
   
    <!--<import resource="spring-security.xml"/>-->
    <context:component-scan base-package="kz.alem.semantics.sql.orm.dao"/>
    <context:component-scan base-package="kz.alem.semantics.sql.orm.model"/>
    <context:component-scan base-package="kz.alem.semantics.linkdb.orm.dao"/>
    <context:component-scan base-package="kz.alem.semantics.linkdb.orm.dao.impl"/>
    <context:component-scan base-package="kz.alem.semantics.linkdb.orm.service"/>
    <context:component-scan base-package="kz.alem.semantics.linkdb.orm.service.impl"/>
    <context:component-scan base-package="kz.alem.semantics.leaderank.leaderank.orm.dao"/>
    <context:component-scan base-package="kz.alem.semantics.leaderank.leaderank.orm.model"/>
    <context:component-scan base-package="kz.alem.semantics.facebook.service.leaderank.service"/>
    <!--<context:conponent-scan base-package="kz.alem.semantics.facebook.service.leaderank.queue"/>-->
    
    <bean id="dataSource"
          class="org.apache.commons.dbcp.BasicDataSource"
          p:driverClassName="${jdbc.driverClassName}" 
          p:url="${jdbc.url}"
          p:username="${jdbc.username}" 
          p:password="${jdbc.password}" 
          p:maxActive="${hibernate.dbcp.maxActive}"
    />
    
    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="packagesToScan" value="kz.alem.semantics.sql.orm.model" />
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.format_sql">false</prop>
                <prop key="hibernate.generate_statistics">false</prop>
                <prop key="hibernate.connection.charSet">UTF-8</prop>
                <prop key="hibernate.dbcp.maxActive">${hibernate.dbcp.maxActive}</prop>
                <prop key="hibernate.dbcp.maxIdle">${hibernate.dbcp.maxIdle}</prop>
            </props>
        </property>
    </bean>
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    
    <bean id="transactionManager"
          class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>
    <!-- End of hibernate configation -->
    
    <!-- Orient DB -->
    <!--    <bean id = "linkDbDataSource" class="kz.alem.semantics.linkdb.orm.core.LinkDbDataSource">
        <property name="url" value="${orientdb.dburl}"/>
        <property name="username" value="${orientdb.username}"/>
        <property name="password" value="${orientdb.password}"/>
        <property name="iPoolMax" value="70"/>
        <property name="iPoolMin" value="1"/>
    </bean>-->
    <bean id="pageDao" class="kz.alem.semantics.linkdb.orm.dao.impl.PageDaoImpl"/>
    <bean id="botDao" class="kz.alem.semantics.sql.orm.dao.impl.BotDaoImpl"/>
    <bean id = "facebookClient" class = "kz.alem.semantics.facebook.service.facebookclient.client.impl.FacebookLightClientImpl">
        <constructor-arg value="${facebook.service.url}"/>
    </bean>
    <bean id= "leaderankQ" class = "kz.alem.semantics.facebook.service.leaderank.queue.RabbitQueue">
        <constructor-arg value="${leaderank.queue.name}"/>
        <constructor-arg value="${leaderank.queue.host}"/>
        <constructor-arg value="${leaderank.queue.port}"/>
        <constructor-arg value="${leaderank.queue.username}"/>
        <constructor-arg value="${leaderank.queue.password}"/>
        <constructor-arg value="${leaderank.exchange.name}"/>
    </bean>
    <bean id= "childQ" class = "kz.alem.semantics.facebook.service.leaderank.queue.RabbitQueue">
        <constructor-arg value="${child.queue.name}"/>
        <constructor-arg value="${leaderank.queue.host}"/>
        <constructor-arg value="${leaderank.queue.port}"/>
        <constructor-arg value="${leaderank.queue.username}"/>
        <constructor-arg value="${leaderank.queue.password}"/>
        <constructor-arg value="${child.exchange.name}"/>
    </bean>
     
</beans>
